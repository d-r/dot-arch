// https://github.com/YaLTeR/niri/wiki/Configuration:-Introduction

//------------------------------------------------------------------------------
// BINDS

// https://github.com/YaLTeR/niri/wiki/Configuration:-Key-Bindings

// Get a list of bindable actions:
//   $ niri msg action -h | less

// Run a command inside of a shell:
//   { spawn "sh" "-c" "notify-send Hello \"OH, HAI!\""" }

binds {
    Mod+Shift+Delete { quit skip-confirmation=true; }
    Mod+Shift+P { power-off-monitors; }
    Mod+Shift+Slash { show-hotkey-overlay; }

    Mod+F12 { switch-layout "next"; }

    Mod+Backspace { close-window; }

    Mod+Return { spawn "uh" "term"; }

    Mod+S { spawn "uh" "save" "bookmark"; }

    // PICKERS

    Mod+O { spawn "uh" "pick" "bookmark"; }
    Mod+P { spawn "uh" "pick" "project"; }
    Mod+R { spawn "uh" "pick" "app"; }
    Mod+Shift+R { spawn "fuzzel"; }

    // TABS

    Mod+BracketLeft { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }
    Mod+Backslash { focus-window-down-or-top; }

    // LAYOUT

    Mod+F { switch-preset-column-width; }
    Mod+Shift+F { fullscreen-window; }

    Mod+C { center-column; }
    Mod+Shift+C { center-visible-columns; }

    Mod+V { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // FOCUS

    Mod+Left { focus-column-left; }
    Mod+Down { focus-workspace-down; }
    Mod+Up { focus-workspace-up; }
    Mod+Right { focus-column-right; }

    Mod+H { focus-column-left; }
    Mod+J { focus-workspace-down; }
    Mod+K { focus-workspace-up; }
    Mod+L { focus-column-right; }

    Mod+Home { focus-column-first; }
    Mod+End { focus-column-last; }

    Mod+Tab { focus-window-previous; }

    Mod+Grave repeat=false { toggle-overview; }
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }

    // MOVE COLUMN

    Mod+Shift+Left { move-column-left; }
    Mod+Shift+Down { move-column-to-workspace-down; }
    Mod+Shift+Up { move-column-to-workspace-up; }
    Mod+Shift+Right { move-column-right; }

    Mod+Shift+H { move-column-left; }
    Mod+Shift+J { move-column-to-workspace-down; }
    Mod+Shift+K { move-column-to-workspace-up; }
    Mod+Shift+L { move-column-right; }

    Mod+Shift+Home { move-column-to-first; }
    Mod+Shift+End { move-column-to-last; }

    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    // MOVE WORKSPACE

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up { move-workspace-up; }

    // VOLUME KEYS

    XF86AudioLowerVolume { spawn "vol" "dec"; }
    XF86AudioRaiseVolume { spawn "vol" "inc"; }
    XF86AudioMute { spawn "vol" "toggle"; }
    XF86AudioMicMute { spawn "vol" "toggle-mic"; }

    // BRIGHTNESS KEYS

    XF86MonBrightnessDown { spawn "bri" "dec"; }
    XF86MonBrightnessUp { spawn "bri" "inc"; }

    // SCREENSHOTS

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.

    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
}

//------------------------------------------------------------------------------
// SETTINGS

prefer-no-csd // Remove window decorations

screenshot-path "~/screenshots/niri-%Y-%m-%d-%H-%M-%S.png"

output "eDP-1" {
    scale 1
}

input {
    workspace-auto-back-and-forth

    keyboard {
        xkb {
            layout "us,se"
        }
    }

    touchpad {
        natural-scroll
        dwt // Disable while typing
        click-method "clickfinger"
    }

    mouse {
        natural-scroll
    }
}

cursor {
    hide-when-typing
}

gestures {
    hot-corners {
        off
    }
}

layout {
    gaps 8
    background-color "transparent"
    center-focused-column "on-overflow"
    default-column-display "tabbed"

    default-column-width { proportion 0.49; }
    preset-column-widths {
        proportion 0.49
        proportion 0.98
    }

    border {
        off
        width 2

        // The default colors
        active-color "#7fc8ff"
        inactive-color "#505050"
        urgent-color "#9b0000"
    }

    focus-ring {
        off
        width 2

        // The default colors
        active-color "#7fc8ff"
        inactive-color "#505050"
        urgent-color "#9b0000"
    }

    tab-indicator {
        position "top"
        place-within-column // So it doesn't spill out into the upper gap
        hide-when-single-tab
        length total-proportion=1.0 // Stretch across the full width of the column
        width 4
        gaps-between-tabs 8
    }
}

overview {
    zoom 0.3
}

debug {
    // Make xdg-activation work in more cases.
    // I.e., the thing where an app asks to be focused, and the WM focuses it.
    // Without this, Firefox won't gain focus when I run:
    // xdg-open https://calendar.google.com/
    honor-xdg-activation-with-invalid-serial
}

//------------------------------------------------------------------------------
// INIT

hotkey-overlay {
    skip-at-startup
}

environment {
    ELECTRON_OZONE_PLATFORM_HINT "auto" // Needed by Electron apps
}

// GTK4 dark mode
spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "color-scheme" "prefer-dark"

// GTK3 dark mode
// https://archlinux.org/packages/extra/any/adw-gtk-theme/
spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "gtk-theme" "adw-gtk3-dark"
spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "icon-theme" "adw-gtk3"

// Utilities
spawn-at-startup "swaybg" "--image" "/home/dan/wallpapers/alena-aenami-all-i-need-1080p.jpg"
spawn-at-startup "waybar"
spawn-at-startup "swaync"

//------------------------------------------------------------------------------
// WINDOWS

// Make the wallpaper stationary, rather than moving with workspaces.
layer-rule {
    // This is for swaybg; change for other wallpaper tools.
    // Find the right namespace by running niri msg layers.
    match namespace="^wallpaper$"
    place-within-backdrop true
}

window-rule {
    // Only draw the border *around* the window, don't draw it as a rectangle
    // *behind* the window.
    draw-border-with-background false
}

window-rule {
    match app-id="firefox"

    // For some reason, Firefox eats up one pixel of any border given to it.
    // So if the global border width is 2, a Firefox window will get a single
    // pixel border. It'll get *no border* when the width is 1.
    // So give it an extra pixel.
    border {
        width 3
    }
}

window-rule {
    match app-id="modal"

    open-floating true
    default-floating-position x=0 y=0 relative-to="top"
    default-column-width { proportion 0.6; }
    default-window-height { proportion 1.0; }
    border {
        off
    }
}

// Dim inactive window
window-rule {
   match is-focused=false
   opacity 0.8
   shadow {
       on
       inactive-color "#1D1D1FEB"
       spread 0
       softness 0
       offset x=0 y=0
       draw-behind-window true
   }
}

//------------------------------------------------------------------------------
// WORKSPACES

workspace "web"
workspace "dot"
workspace "dev"
workspace "snd"
workspace "vlt"

window-rule {
    match app-id="firefox" at-startup=true

    open-on-workspace "web"
    open-focused false
    default-column-width { proportion 0.98; }
}

window-rule {
    match app-id="code" at-startup=true

    open-on-workspace "dot"
    open-focused false
}

window-rule {
    match app-id="Renoise" at-startup=true
    match app-id="sunvox" at-startup=true
    match app-id="bitwig" at-startup=true

    open-on-workspace "snd"
    open-focused false
    default-column-width { proportion 0.98; }
}

window-rule {
    match app-id="obsidian" at-startup=true

    open-on-workspace "vlt"
    open-focused false
    default-column-width { proportion 0.98; }
}

spawn-at-startup "firefox"
spawn-at-startup "code" "/home/dan/dot"
spawn-at-startup "renoise"
spawn-at-startup "obsidian"
