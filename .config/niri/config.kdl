// https://github.com/YaLTeR/niri/wiki/Configuration:-Introduction

//------------------------------------------------------------------------------
// BINDS

// https://github.com/YaLTeR/niri/wiki/Configuration:-Key-Bindings

// Get a list of bindable actions:
//   $ niri msg action -h | less

// Run a command inside of a shell:
//   { spawn "sh" "-c" "notify-send Hello \"OH, HAI!\""" }

binds {
    Mod+Shift+Delete { quit skip-confirmation=true; }
    Mod+Shift+Slash { show-hotkey-overlay; }
    Mod+Shift+P { power-off-monitors; }

    Mod+Backspace { close-window; }

    Mod+Grave hotkey-overlay-title="Focus scratchpad" { focus-workspace "~"; }

    Mod+Return hotkey-overlay-title="Open terminal" { spawn "kitty"; }

    Mod+R hotkey-overlay-title="Run..." { spawn "fuzzel"; }

    Mod+O repeat=false { toggle-overview; }

    // FOCUS

    Mod+Left { focus-column-left; }
    Mod+Down { focus-workspace-down; }
    Mod+Up { focus-workspace-up; }
    Mod+Right { focus-column-right; }

    Mod+H { focus-column-left; }
    Mod+J { focus-workspace-down; }
    Mod+K { focus-workspace-up; }
    Mod+L { focus-column-right; }

    Mod+Home { focus-column-first; }
    Mod+End { focus-column-last; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }

    // TABS

    Mod+BracketLeft { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }
    Mod+Backslash { focus-window-down-or-top; }

    // MOVE COLUMN

    Mod+Ctrl+Left { move-column-left; }
    Mod+Ctrl+Down { move-column-to-workspace-down; }
    Mod+Ctrl+Up { move-column-to-workspace-up; }
    Mod+Ctrl+Right { move-column-right; }

    Mod+Ctrl+H { move-column-left; }
    Mod+Ctrl+J { move-column-to-workspace-down; }
    Mod+Ctrl+K { move-column-to-workspace-up; }
    Mod+Ctrl+L { move-column-right; }

    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End { move-column-to-last; }

    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    // MOVE WORKSPACE

    Mod+Ctrl+Page_Down { move-workspace-down; }
    Mod+Ctrl+Page_Up { move-workspace-up; }

    // LAYOUT

    Mod+Semicolon { switch-preset-column-width; }

    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }
    Mod+Ctrl+C { center-visible-columns; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    Mod+V { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    Mod+W { toggle-column-tabbed-display; }

    // SCREENSHOTS

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // VOLUME KEYS

    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "5%+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "5%-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

// bindel = ,XF86MonBrightnessUp, exec, brightnessctl -e4 -n2 set 5%+
// bindel = ,XF86MonBrightnessDown, exec, brightnessctl -e4 -n2 set 5%-

    // BRIGHTNESS KEYS

    XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "-e4" "-n2" "set" "5%+"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "-e4" "-n2" "set" "5%-"; }

    // TODO: Read and understand what this is.
    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
}

//------------------------------------------------------------------------------
// LOOK AND FEEL

prefer-no-csd // Remove window decorations

layout {
    // Set gaps around windows in logical pixels.
    gaps 12

    default-column-display "tabbed"

    tab-indicator {
        position "top"
        hide-when-single-tab
        length total-proportion=1.0
        gaps-between-tabs 12
    }

    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "never"

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps into account.
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

        // Fixed sets the width in logical pixels exactly.
        // fixed 1920
    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    // You can change how the focus ring looks.
    focus-ring {
        // Uncomment this line to disable the focus ring.
        // off

        // How many logical pixels the ring extends out from the windows.
        width 2

        // Colors can be set in a variety of ways:
        // - CSS named colors: "red"
        // - RGB hex: "#rgb", "#rgba", "#rrggbb", "#rrggbbaa"
        // - CSS-like notation: "rgb(255, 127, 0)", rgba(), hsl() and a few others.

        // Color of the ring on the active monitor.
        active-color "#7fc8ff"

        // Color of the ring on inactive monitors.
        inactive-color "#505050"

        // You can also use gradients. They take precedence over solid colors.
        // Gradients are rendered the same as CSS linear-gradient(angle, from, to).
        // The angle is the same as in linear-gradient, and is optional,
        // defaulting to 180 (top-to-bottom gradient).
        // You can use any CSS linear-gradient tool on the web to set these up.
        // Changing the color space is also supported, check the wiki for more info.
        //
        // active-gradient from="#80c8ff" to="#bbddff" angle=45

        // You can also color the gradient relative to the entire view
        // of the workspace, rather than relative to just the window itself.
        // To do that, set relative-to="workspace-view".
        //
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        // The settings are the same as for the focus ring.
        // If you enable the border, you probably want to disable the focus ring.
        off

        width 4
        active-color "#ffc87f"
        inactive-color "#505050"

        // Color of the border around windows that request your attention.
        urgent-color "#9b0000"

        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    // You can enable drop shadows for windows.
    shadow {
        // Uncomment the next line to enable shadows.
        // on

        // By default, the shadow draws only around its window, and not behind it.
        // Uncomment this setting to make the shadow draw behind its window.
        //
        // Note that niri has no way of knowing about the CSD window corner
        // radius. It has to assume that windows have square corners, leading to
        // shadow artifacts inside the CSD rounded corners. This setting fixes
        // those artifacts.
        // 
        // However, instead you may want to set prefer-no-csd and/or
        // geometry-corner-radius. Then, niri will know the corner radius and
        // draw the shadow correctly, without having to draw it behind the
        // window. These will also remove client-side shadows if the window
        // draws any.
        // 
        // draw-behind-window true

        // You can change how shadows look. The values below are in logical
        // pixels and match the CSS box-shadow properties.

        // Softness controls the shadow blur radius.
        softness 30

        // Spread expands the shadow.
        spread 5

        // Offset moves the shadow relative to the window.
        offset x=0 y=5

        // You can also change the shadow color and opacity.
        color "#0007"
    }

    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
animations {
    // Uncomment to turn off all animations.
    // off

    // Slow down all animations by this factor. Values below 1 speed them up instead.
    // slowdown 3.0
}

//------------------------------------------------------------------------------
// I/O

// Laptop screen, 13", 1920x1080
output "eDP-1" {
    scale 1
}

input {
    workspace-auto-back-and-forth
    focus-follows-mouse

    keyboard {
        xkb {
            layout "us,se"
            options "grp:alt_shift_toggle" // Switch layout with alt+shift
        }
    }

    mouse {
        natural-scroll
    }

    touchpad {
        natural-scroll
        dwt // Disable while typing
        click-method "clickfinger"
    }
}

screenshot-path "~/images/screenshots/niri-%Y-%m-%d_%H-%M-%S.png"

//------------------------------------------------`------------------------------
// WORKSPACES

workspace "~"
spawn-at-startup "kitty" "--class" "scratch"
spawn-at-startup "kitty" "--class" "scratch"
window-rule {
    match at-startup=true app-id="scratch"

    open-on-workspace "~"
    open-focused false
}

workspace "hub"
spawn-at-startup "firefox"
window-rule {
    match at-startup=true app-id="firefox"

    open-on-workspace "hub"
    open-focused false
    open-maximized true
}

workspace "dot"
spawn-at-startup "code" "/home/dan/dot"
window-rule {
    match at-startup=true app-id="code"

    open-on-workspace "dot"
    open-focused false
    open-maximized false
}

workspace "dev"

workspace "snd"

spawn-at-startup "code" "/home/dan/dot"

// Disabled, because it crashes niri
//spawn-at-startup "renoise"

window-rule {
    match app-id="Renoise"

    open-on-workspace "snd"
    open-maximized true
}

workspace "org"
spawn-at-startup "obsidian"
window-rule {
    match at-startup=true app-id="obsidian"

    open-on-workspace "org"
    open-focused false
    open-maximized true
}

//------------------------------------------------------------------------------
// STARTUP

hotkey-overlay {
    skip-at-startup
}

environment {
    // Needed for xwayland-satellite
    DISPLAY ":0"

    // Needed for Electron apps
    ELECTRON_OZONE_PLATFORM_HINT "auto"
}

spawn-at-startup "swaync"
spawn-at-startup "xwayland-satellite"
spawn-at-startup "swaybg" "--image" "/home/dan/wallpapers/alena-aenami-all-i-need-1080p.jpg"
spawn-at-startup "waybar" "-c" "/home/dan/.config/waybar/niri.jsonc"
