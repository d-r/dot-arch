#!/usr/bin/env nu

def main [] {
    main pick
}

#-------------------------------------------------------------------------------
# READ

# Open fzf bookmark picker
def "main pick" [$cmd = 'xdg-open'] {
    let $url = (open-file | picker)
    ^($cmd) $url
}

# List bookmarks
def "main list" [] {
    open-file | choices
}

# Get URL by key
def "main get" [$key: string] {
    open-file | get $key
}

#-------------------------------------------------------------------------------
# WRITE

# Add a URL, prompting the user for a key
def "main add-url" [$url: string] {
    let $key = (input 'Key: ')
    main add $key $url
}

# Add a bookmark
def "main add" [$key: string, $url: string] {
    open-file | insert $key $url | save-to-file
}

# Set URL by key
def "main set" [$key: string, $url: string] {
    open-file | update $key $url | save-to-file
}

# Edit bookmarks.json with $EDITOR
def "main edit" [] {
    let $editor = $env.EDITOR? | default micro
    ^($editor) (file-path)
}

#-------------------------------------------------------------------------------
# PRIVATE

const $FILE_PATH = '~/.local/share/sys/bookmarks.json'

def file-path []: nothing -> string {
    $FILE_PATH | path expand
}

def open-file []: nothing -> record {
    open (file-path)
}

def save-to-file []: record -> nothing {
    $in | to json | save -f (file-path)
}

def picker []: record -> string {
    # TODO: Smarter delimiter
    let $choice = $in | choices | fzf --delimiter '  ' --nth 1
    $choice | choice-value
}

def choices []: record -> string {
    let $items = $in | transpose k v
    let $lines = $items | each {|f| $"($f.k)\t($f.v)\n" }
    $lines | str join | column -t -s "\t"
}

def choice-value []: string -> any {
    $in | split column -r '\s+' -n 2 k v | first | get v
}
