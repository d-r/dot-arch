#!/usr/bin/env nu

def main [$cmd = 'xdg-open'] {
    ^($cmd) (main pick)
}

#-------------------------------------------------------------------------------
# READ

const $SK_COLORS = {
    fg: "#777777"
    current: "#eeeeee",
    current_bg: "#222222",
    current_match: "#7fc8ff",
    matched: "#7fc8ff",
}

# Open bookmark picker
def "main pick" [$cmd = 'xdg-open'] {
    let $colors = $SK_COLORS | transpose k v | each {|x| $"($x.k):($x.v)" } | str join ","
    let $choice = (main list) | sk --color=($colors) --reverse --no-info --delimiter '\s\s+' --nth 1
    $choice | choice-value
}

# List bookmarks
def "main list" [] {
    open-file | kv-menu
}

# Get URL by key
def "main get" [$key: string] {
    open-file | get $key
}

#-------------------------------------------------------------------------------
# WRITE

# Add a URL, prompting the user for a key
def "main add-url" [$url: string] {
    let $key = (input 'Key: ')
    main add $key $url
}

# Add a bookmark
def "main add" [$key: string, $url: string] {
    open-file | insert $key $url | save-to-file
}

# Set URL by key
def "main set" [$key: string, $url: string] {
    open-file | update $key $url | save-to-file
}

# Edit bookmarks.json with $EDITOR
def "main edit" [] {
    let $editor = $env.EDITOR? | default micro
    ^($editor) (file-path)
}

#-------------------------------------------------------------------------------
# PRIVATE

const $FILE_PATH = '~/bucket/bookmarks.json'

def file-path []: nothing -> string {
    $FILE_PATH | path expand
}

def open-file []: nothing -> record {
    open (file-path)
}

def save-to-file []: record -> nothing {
    $in | to json | save -f (file-path)
}

def kv-menu []: record -> string {
    let $items = $in | transpose k v
    let $lines = $items | each {|x| $"($x.k)\t($x.v)\n" }
    $lines | str join | column -t -s "\t"
}

def choice-value []: string -> any {
    $in | split column -r '\s+' -n 2 k v | first | get v
}
